@model HospitalManagementSystem.Models.UIModels.PatientUIModel
@using HospitalManagementSystem.Models.UIModels

@{
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Row starts -->
<div class="row gx-3">
	<div class="col-sm-12">
		<div class="card">
			<div class="card-header">
				<h5 class="card-title">Add Patient Details</h5>
			</div>
			<div class="card-body">
				<form asp-controller="Account" asp-action="AddPatientAppointment" method="post" id="frmAddAppointment" class="form-horizontal"
					  data-ajax="true" role="form" data-ajax-update="#frmAddAppointment" data-ajax-success="frmOnSuccess">

					@if (!Model.Status && !string.IsNullOrEmpty(Model.Message))
					{
						<div class="alert alert-danger alert-dismissible mb-0" id="appointmentMessage">
							@Model.Message
							<button type="button" class="close" data-bs-dismiss="alert" aria-label="Close">
								<span aria-hidden="true">&times;</span>
							</button>
						</div>
					}
					else if (Model.Status && !string.IsNullOrEmpty(Model.Message))
					{
						<div class="alert alert-success alert-dismissible mb-0" id="appointmentMessage">
							@Model.Message
							<button type="button" class="close" data-bs-dismiss="alert" aria-label="Close">
								<span aria-hidden="true">&times;</span>
							</button>
						</div>
					}

					<!-- Row for Doctor Detail -->
					<div class="row gx-3">

						<div class="col-xxl-3 col-lg-4 col-sm-6">
							<div class="mb-3">
								<label class="form-label" for="DepartmentId">Department <span class="text-danger">*</span></label>
								@Html.DropDownListFor(model => model.PatientAppointmentUIModel.DepartmentId, new SelectList(Model.PatientAppointmentUIModel.DepartmentList, "key", "value", Model.PatientAppointmentUIModel.DepartmentId), "Select Department", new { @class = "form-control", @id = "DepartmentId" })
								@Html.ValidationMessageFor(model => model.PatientAppointmentUIModel.DepartmentId, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="col-xxl-3 col-lg-4 col-sm-6">
							<div class="mb-3">
								<label class="form-label" for="Doctor">Doctor <span class="text-danger">*</span></label>
								@Html.DropDownListFor(model => model.PatientAppointmentUIModel.DoctorId, new SelectList(Model.PatientAppointmentUIModel.DoctorList, "key", "value", Model.PatientAppointmentUIModel.DoctorId), "Select Doctor", new { @class = "form-control" })
								@Html.ValidationMessageFor(model => model.PatientAppointmentUIModel.DoctorId, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="col-xxl-3 col-lg-4 col-sm-6">
							<div class="mb-3">
								<label class="form-label" for="AppointmentOn">Appointment Date <span class="text-danger">*</span></label>
								@Html.TextBoxFor(model => model.PatientAppointmentUIModel.AppointmentOn, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
								@Html.ValidationMessageFor(model => model.PatientAppointmentUIModel.AppointmentOn, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="col-xxl-3 col-lg-4 col-sm-6">
							<div class="mb-3">
								<label class="form-label" asp-for="TimeSlotId">Time Slot <span class="text-danger">*</span></label>
								@Html.DropDownListFor(model => model.PatientAppointmentUIModel.TimeSlotId, new SelectList(Html.GetEnumSelectList<TimeSlotId>(), "Value", "Text"),
																	"Select Time Slot", new { @class = "form-control" })
								@Html.ValidationMessageFor(model => model.PatientAppointmentUIModel.TimeSlotId, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="col-xxl-3 col-lg-4 col-sm-6">
							<div class="mb-3">
								<label class="form-label" for="PatientType">Patient Type <span class="text-danger">*</span></label>
								@Html.DropDownListFor(model => model.PatientAppointmentUIModel.PatientType,
																	new List<SelectListItem>{
								new SelectListItem { Text = "Patient Type", Value = "" },
								new SelectListItem { Text = "New Patient", Value = "New Patient" },
								new SelectListItem { Text = "Old Patient", Value = "Old Patient" }
								}, new { @class = "form-select", id = "PatientType" })
								@Html.ValidationMessageFor(model => model.PatientAppointmentUIModel.PatientType, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="col-xxl-3 col-lg-4 col-sm-6">
							<div class="mb-3">
								<label class="form-label" for="CRM Number">CRM Number <span class="text-danger">*</span></label>
								@Html.EditorFor(model => model.PatientAppointmentUIModel.CRMNumber, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter CRM Number", id = "CRMNumber", @readonly = "true" } })
								@Html.ValidationMessageFor(model => model.PatientAppointmentUIModel.CRMNumber, "", new { @class = "text-danger" })
							</div>
						</div>

					</div>
					<hr />

					<!-- Row starts -->
					<div class="row gx-3">

						<div class="col-xxl-3 col-lg-4 col-sm-6">
							<div class="mb-3">
								<label class="form-label" for="FirstName">First Name <span class="text-danger">*</span></label>
								@Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter First Name", type = "text" } })
								@Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="col-xxl-3 col-lg-4 col-sm-6">
							<div class="mb-3">
								<label class="form-label" for="LastName">Last Name <span class="text-danger">*</span></label>
								@Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Last Name", type = "text" } })
								@Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="col-xxl-3 col-lg-4 col-sm-6">
							<div class="mb-3">
								<label class="form-label" for="Gender">Gender <span class="text-danger">*</span></label>
								<div class="m-0">
									<div class="form-check form-check-inline">
										@Html.RadioButtonFor(model => model.Gender, "Male", new { @class = "form-check-input" })
										<label class="form-check-label" for="selectGender1">Male</label>
									</div>
									<div class="form-check form-check-inline">
										@Html.RadioButtonFor(model => model.Gender, "Female", new { @class = "form-check-input" })
										<label class="form-check-label" for="selectGender2">Female</label>
									</div>
								</div>
								@Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="col-xxl-3 col-lg-4 col-sm-6">
							<div class="mb-3">
								<label class="form-label" for="Email">Email ID <span class="text-danger">*</span></label>
								@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Email Address", type = "text" } })
								@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="col-xxl-3 col-lg-4 col-sm-6">
							<div class="mb-3">
								<label class="form-label" for="PhoneNumber">Phone Number <span class="text-danger">*</span></label>
								@Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Phone Number", type = "text" } })
								@Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="col-xxl-3 col-lg-4 col-sm-6">
							<div class="mb-3">
								<label class="form-label" for="MaritalStatus">Marital Status <span class="text-danger">*</span></label>
								@Html.DropDownListFor(model => model.MaritalStatus, new SelectList(
																	new List<SelectListItem>
								{
								new SelectListItem { Text = "--Select--", Value = "" },
								new SelectListItem { Text = "Married", Value = "Married" },
								new SelectListItem { Text = "Unmarried", Value = "Unmarried" }
								},
																	"Value", "Text"), new { @class = "form-select", id = "MartialStatus" })
								@Html.ValidationMessageFor(model => model.MaritalStatus, "", new { @class = "text-danger" })

							</div>
						</div>

						<div class="col-xxl-3 col-lg-4 col-sm-6">
							<div class="mb-3">
								<label class="form-label" for="FatherName">Father's Name <span class="text-danger">*</span></label>
								@Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Father Name", type = "text" } })
								@Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="col-xxl-3 col-lg-4 col-sm-6">
							<div class="mb-3">
								<label class="form-label" for="MotherName">Mother's Name <span class="text-danger">*</span></label>
								@Html.EditorFor(model => model.MotherName, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Mother Name", type = "text" } })
								@Html.ValidationMessageFor(model => model.MotherName, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="col-xxl-3 col-lg-4 col-sm-6">
							<div class="mb-3">
								<label class="form-label" for="SpouseName">Spouse's Name <span class="text-danger">*</span></label>
								@Html.EditorFor(model => model.SpouseName, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Spouse Name", type = "text", id = "SpouseName", @readonly = "true" } })
								@Html.ValidationMessageFor(model => model.SpouseName, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="col-xxl-3 col-lg-4 col-sm-6">
							<div class="mb-3">
								<label class="form-label" for="DOB">DOB <span class="text-danger">*</span></label>
								@* @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control", type = "date" } }) *@
								@Html.TextBoxFor(model => model.DOB, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })

								@Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="col-xxl-3 col-lg-4 col-sm-6">
							<div class="mb-3">
								<label class="form-label" for="BloodGroup">Blood Group <span class="text-danger">*</span></label>
								@Html.DropDownListFor(model => model.BloodGroup, new SelectList(
																	new List<SelectListItem>
								{
								new SelectListItem { Text = "--Select--"},
								new SelectListItem { Text = "A+", Value = "A+" },
								new SelectListItem { Text = "A-", Value = "A-" },
								new SelectListItem { Text = "B+", Value = "B+" },
								new SelectListItem { Text = "B-", Value = "B-" },
								new SelectListItem { Text = "O+", Value = "O+" },
								new SelectListItem { Text = "O-", Value = "O-" },
								new SelectListItem { Text = "AB+", Value = "AB+" },
								new SelectListItem { Text = "AB-", Value = "AB-" }},
																	"Value", "Text"), new { @class = "form-select" })
								@Html.ValidationMessageFor(model => model.BloodGroup, "", new { @class = "text-danger" })

							</div>
						</div>

						<div class="col-xxl-3 col-lg-4 col-sm-6">
							<div class="mb-3">
								<label class="form-label" for="EmergencyPhoneNumber">Emergency Phone Number <span class="text-danger">*</span></label>
								@Html.EditorFor(model => model.EmergencyPhoneNumber, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Emergency Number", type = "text" } })
								@Html.ValidationMessageFor(model => model.EmergencyPhoneNumber, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="col-xxl-3 col-lg-4 col-sm-6">
							<div class="mb-3">
								<label class="form-label" for="ReasonForVisit">Reason for visit <span class="text-danger">*</span></label>
								@Html.EditorFor(model => model.PatientAppointmentUIModel.ReasonForVisit, new { htmlAttributes = new { @class = "form-control", placeholder = "Reason for visit...", type = "text" } })
								@Html.ValidationMessageFor(model => model.PatientAppointmentUIModel.ReasonForVisit, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="col-sm-12">
							<div class="d-flex gap-2 justify-content-end">
								<button type="button" class="btn btn-outline-secondary" id="cancelButton">Cancel</button>
								<button type="submit" class="btn btn-primary" name="btnAddAppointment" value="true" id="btnAddAppointment">
									Create Appointment
								</button>

							</div>
						</div>
					</div>
					<!-- Row ends -->

				</form>
			</div>
		</div>
	</div>
</div>

<script type="text/javascript">


	function makeCRM(length) {
		let result = '';
		const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
		const charactersLength = characters.length;
		let counter = 0;
		while (counter < length) {
			result += characters.charAt(Math.floor(Math.random() * charactersLength));
			counter += 1;
		}
		return result;
	}

	$.validator.unobtrusive.parse($("#frmAddAppointment"));
	$("#DepartmentId").on("change", function() {
		$("#frmAddAppointment").validate().destroy();
		$("#frmAddAppointment").submit();
	});

	  $("#PatientType").on("change",function(){
		  var selectedValue = $(this).val();
			if (selectedValue === "" ) {
				$("#CRMNumber").attr("readonly", true).attr("value", "").val("");
			}
			else if(selectedValue === "New Patient"){
				let generatedCRM = makeCRM(8);
				$("#CRMNumber").attr("readonly", true).val(generatedCRM).attr("value", generatedCRM);
			} else {
				$("#CRMNumber").attr("readonly", false).attr("value", "").val("");
			}
	  })

	$.validator.unobtrusive.parse($("#frmAddAppointment"));
	$("#CRMNumber").on("change keyup paste",function(){
		$("#frmAddAppointment").validate().destroy();
		$("#frmAddAppointment").submit();
	})

	  $("#MartialStatus").on("change",function(){
		  var selectedValue = $(this).val();
		  if (selectedValue === "" ){
			  $("#SpouseName").attr("readonly",true).attr("value", "").val("");
		  }
		  else if(selectedValue ==="Married"){
			  $("#SpouseName").attr("readonly",false).attr("value", "").val("");
		  } else {
			  $("#SpouseName").attr("readonly",true).attr("value", "").val("N/A");
		  }
	  })

	  $("#btnAddAppointment").on("click", function () {
		$(".text-danger").show();
		// $("#btnAddAppointment").val("true");
	  });

	  const alertBox = $("#appointmentMessage");
	  function frmOnSuccess(){
		  if(alertBox.hasClass("alert-success")){
			  let form = document.getElementById("frmAddAppointment");
			  form.reset();
		  }
	  }

</script>

@section Scripts {
	@Html.Partial("_ValidationScriptsPartial")
}


